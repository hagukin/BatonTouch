{"ast":null,"code":"var _jsxFileName = \"/home/habin/\\uB9B4\\uB808\\uC774\\uC18C\\uC124\\uD504\\uB85C\\uC81D\\uD2B8/BatonTouch/\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC/\\uD504\\uB85C\\uD1A0\\uD0C0\\uC785/my-app/src/new_components/MainSection/Novel.jsx\";\nimport React from \"react\";\nimport InputSentenceBox from \"./InputSentenceBox/InputSentenceBox\";\nimport ReadSentenceArea from \"./ReadSentenceArea/ReadSentenceArea\";\nimport VoteSentenceBox from \"./VoteSentenceBox/VoteSentenceBox\";\nimport { Route } from \"react-router-dom\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Novel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddSub = _text => {\n      // subNovelData에 _text에 대응하는 객체 추가\n      this.setState(prevState => ({\n        subNovelData: prevState.subNovelData.concat({\n          text: _text,\n          recommend: 0,\n          id: \"sub_\" + prevState.subNovelData.length\n        })\n      }));\n    };\n\n    this.handleAddRecommend = destId => {\n      // debugger;\n      this.setState({\n        subNovelData: this.state.subNovelData.map(elem => {\n          if (elem.id === destId) {\n            elem.recommend = elem.recommend + 1;\n          }\n\n          return elem;\n        })\n      });\n    };\n\n    this.state = {\n      fixedNovelData: data,\n      subNovelData: [{\n        text: \"hello\",\n        recommend: 10,\n        id: \"sub_0\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Novel\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ReadSentenceArea, {\n          data: this.state.fixedNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/write\",\n        children: /*#__PURE__*/_jsxDEV(InputSentenceBox, {\n          onAddSub: this.handleAddSub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/vote\",\n        children: /*#__PURE__*/_jsxDEV(VoteSentenceBox, {\n          onAddRecommend: this.handleAddRecommend,\n          data: this.state.subNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Novel;","map":{"version":3,"sources":["/home/habin/릴레이소설프로젝트/BatonTouch/프론트엔드/프로토타입/my-app/src/new_components/MainSection/Novel.jsx"],"names":["React","InputSentenceBox","ReadSentenceArea","VoteSentenceBox","Route","data","Novel","Component","constructor","props","handleAddSub","_text","setState","prevState","subNovelData","concat","text","recommend","id","length","handleAddRecommend","destId","state","map","elem","fixedNovelData","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AACA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,YAxBmB,GAwBHC,KAAD,IAAW;AACxB;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,CAAuBC,MAAvB,CAA8B;AAAEC,UAAAA,IAAI,EAAEL,KAAR;AAAeM,UAAAA,SAAS,EAAE,CAA1B;AAA6BC,UAAAA,EAAE,EAAE,SAASL,SAAS,CAACC,YAAV,CAAuBK;AAAjE,SAA9B;AADc,OAAhB,CAAd;AAGD,KA7BkB;;AAAA,SA+BnBC,kBA/BmB,GA+BGC,MAAD,IAAY;AAC/B;AACA,WAAKT,QAAL,CAAc;AACZE,QAAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWR,YAAX,CAAwBS,GAAxB,CAA6BC,IAAD,IAAU;AAClD,cAAIA,IAAI,CAACN,EAAL,KAAYG,MAAhB,EAAwB;AACtBG,YAAAA,IAAI,CAACP,SAAL,GAAiBO,IAAI,CAACP,SAAL,GAAiB,CAAlC;AACD;;AACD,iBAAOO,IAAP;AACD,SALa;AADF,OAAd;AAQD,KAzCkB;;AAEjB,SAAKF,KAAL,GAAa;AACXG,MAAAA,cAAc,EAAEpB,IADL;AAEXS,MAAAA,YAAY,EAAE,CAAC;AAAEE,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,SAAS,EAAE,EAA5B;AAAgCC,QAAAA,EAAE,EAAE;AAApC,OAAD;AAFH,KAAb;AAID;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAE,KAAKf;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,cAAc,EAAE,KAAKU,kBAAtC;AAA0D,UAAA,IAAI,EAAE,KAAKE,KAAL,CAAWR;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAvBiC;;AA6CpC,eAAeR,KAAf","sourcesContent":["import React from \"react\";\nimport InputSentenceBox from \"./InputSentenceBox/InputSentenceBox\";\nimport ReadSentenceArea from \"./ReadSentenceArea/ReadSentenceArea\";\nimport VoteSentenceBox from \"./VoteSentenceBox/VoteSentenceBox\";\nimport { Route } from \"react-router-dom\";\nimport data from \"./data.json\";\nclass Novel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fixedNovelData: data,\n      subNovelData: [{ text: \"hello\", recommend: 10, id: \"sub_0\" }],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Novel\">\n        <Route path=\"/\">\n          <ReadSentenceArea data={this.state.fixedNovelData} />\n        </Route>\n        <Route path=\"/write\">\n          <InputSentenceBox onAddSub={this.handleAddSub} />\n        </Route>\n        <Route path=\"/vote\">\n          <VoteSentenceBox onAddRecommend={this.handleAddRecommend} data={this.state.subNovelData} />\n        </Route>\n      </div>\n    );\n  }\n\n  handleAddSub = (_text) => {\n    // subNovelData에 _text에 대응하는 객체 추가\n    this.setState((prevState) => ({\n      subNovelData: prevState.subNovelData.concat({ text: _text, recommend: 0, id: \"sub_\" + prevState.subNovelData.length }),\n    }));\n  };\n\n  handleAddRecommend = (destId) => {\n    // debugger;\n    this.setState({\n      subNovelData: this.state.subNovelData.map((elem) => {\n        if (elem.id === destId) {\n          elem.recommend = elem.recommend + 1;\n        }\n        return elem;\n      }),\n    });\n  };\n}\n\nexport default Novel;\n"]},"metadata":{},"sourceType":"module"}