{"ast":null,"code":"var _jsxFileName = \"/home/habin/\\uB9B4\\uB808\\uC774\\uC18C\\uC124\\uD504\\uB85C\\uC81D\\uD2B8/BatonTouch/\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC/\\uD504\\uB85C\\uD1A0\\uD0C0\\uC785/my-app/src/new_components/MainSection/Novel.jsx\";\nimport React from \"react\";\nimport InputSentenceBox from \"./InputSentenceBox/InputSentenceBox\";\nimport ReadSentenceArea from \"./ReadSentenceArea/ReadSentenceArea\";\nimport VoteSentenceBox from \"./VoteSentenceBox/VoteSentenceBox\";\nimport VoteSentenceArea from \"./VoteSentenceArea/VoteSentenceArea\";\nimport { Route } from \"react-router-dom\";\nimport data from \"./_data.json\";\nimport \"./Novel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Novel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddSub = _text => {\n      // subNovelData에 _text에 대응하는 객체 추가\n      this.setState(prevState => ({\n        subNovelData: prevState.subNovelData.concat({\n          writer: \"ㅇㅇ\",\n          title: \"mysql1\",\n          date: new Date().toISOString(),\n          upvote: 0,\n          downvote: 0,\n          position: 0,\n          end_story: false,\n          content: _text,\n          id: \"sub_\" + prevState.subNovelData.length\n        })\n      }));\n    };\n\n    this.handleAddRecommend = destId => {\n      // debugger;\n      this.setState({\n        subNovelData: this.state.subNovelData.map(elem => {\n          if (elem.id === destId) {\n            elem.recommend = elem.recommend + 1;\n          }\n\n          return elem;\n        })\n      });\n    };\n\n    this.state = {\n      fixedNovelData: data,\n      subNovelData: [{\n        id: 1,\n        writer: \"ㅇㅇ\",\n        title: \"mysql1\",\n        content: \"1111111111111111111111111111111111111111111111111111111111111111111111111111\",\n        comment: \"\",\n        date: \"2021-08-01T11:30:57.618483Z\",\n        upvote: 0,\n        downvote: 0,\n        position: 0,\n        end_story: false\n      }, {\n        id: 2,\n        writer: \"ㅇㅇ\",\n        title: \"mysql1\",\n        content: \"2019년\",\n        comment: \"\",\n        date: \"2019-08-01T11:30:57.618483Z\",\n        upvote: 0,\n        downvote: 0,\n        position: 0,\n        end_story: false\n      }, {\n        id: 3,\n        writer: \"ㅇㅇ\",\n        title: \"mysql1\",\n        content: \"2020년\",\n        comment: \"\",\n        date: \"2020-08-01T11:30:57.618483Z\",\n        upvote: 0,\n        downvote: 0,\n        position: 0,\n        end_story: false\n      }]\n    };\n  } // GET compoenntdIdmount\n  // async componentDidMount() {\n  //   try {\n  //     const res = await fetch(\"http://127.0.0.1:8000/api/\");\n  //     const posts = await res.json();\n  //     this.setState({\n  //       posts,\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Novel\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ReadSentenceArea, {\n          data: this.state.fixedNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/read\",\n        children: /*#__PURE__*/_jsxDEV(ReadSentenceArea, {\n          data: this.state.fixedNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contribute\",\n        children: [/*#__PURE__*/_jsxDEV(ReadSentenceArea, {\n          show: 5,\n          data: this.state.fixedNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputSentenceBox, {\n          onAddSub: this.handleAddSub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VoteSentenceArea, {\n          onAddRecommend: this.handleAddRecommend,\n          data: this.state.subNovelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Novel;","map":{"version":3,"sources":["/home/habin/릴레이소설프로젝트/BatonTouch/프론트엔드/프로토타입/my-app/src/new_components/MainSection/Novel.jsx"],"names":["React","InputSentenceBox","ReadSentenceArea","VoteSentenceBox","VoteSentenceArea","Route","data","Novel","Component","constructor","props","handleAddSub","_text","setState","prevState","subNovelData","concat","writer","title","date","Date","toISOString","upvote","downvote","position","end_story","content","id","length","handleAddRecommend","destId","state","map","elem","recommend","fixedNovelData","comment","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InputSentenceBox from \"./InputSentenceBox/InputSentenceBox\";\nimport ReadSentenceArea from \"./ReadSentenceArea/ReadSentenceArea\";\nimport VoteSentenceBox from \"./VoteSentenceBox/VoteSentenceBox\";\nimport VoteSentenceArea from \"./VoteSentenceArea/VoteSentenceArea\";\nimport { Route } from \"react-router-dom\";\nimport data from \"./_data.json\";\nimport \"./Novel.css\";\nclass Novel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fixedNovelData: data,\n      subNovelData: [\n        {\n          id: 1,\n          writer: \"ㅇㅇ\",\n          title: \"mysql1\",\n          content: \"1111111111111111111111111111111111111111111111111111111111111111111111111111\",\n          comment: \"\",\n          date: \"2021-08-01T11:30:57.618483Z\",\n          upvote: 0,\n          downvote: 0,\n          position: 0,\n          end_story: false,\n        },\n        {\n          id: 2,\n          writer: \"ㅇㅇ\",\n          title: \"mysql1\",\n          content: \"2019년\",\n          comment: \"\",\n          date: \"2019-08-01T11:30:57.618483Z\",\n          upvote: 0,\n          downvote: 0,\n          position: 0,\n          end_story: false,\n        },\n        {\n          id: 3,\n          writer: \"ㅇㅇ\",\n          title: \"mysql1\",\n          content: \"2020년\",\n          comment: \"\",\n          date: \"2020-08-01T11:30:57.618483Z\",\n          upvote: 0,\n          downvote: 0,\n          position: 0,\n          end_story: false,\n        },\n      ],\n    };\n  }\n\n  // GET compoenntdIdmount\n  // async componentDidMount() {\n  //   try {\n  //     const res = await fetch(\"http://127.0.0.1:8000/api/\");\n  //     const posts = await res.json();\n  //     this.setState({\n  //       posts,\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"Novel\">\n        <Route exact path=\"/\">\n          <ReadSentenceArea data={this.state.fixedNovelData} />\n        </Route>\n        <Route path=\"/read\">\n          <ReadSentenceArea data={this.state.fixedNovelData} />\n        </Route>\n        <Route path=\"/contribute\">\n          <ReadSentenceArea show={5} data={this.state.fixedNovelData} />\n          <InputSentenceBox onAddSub={this.handleAddSub} />\n          {/* <VoteSentenceBox onAddRecommend={this.handleAddRecommend} data={this.state.subNovelData} /> */}\n          <VoteSentenceArea onAddRecommend={this.handleAddRecommend} data={this.state.subNovelData} />\n        </Route>\n      </div>\n    );\n  }\n\n  handleAddSub = (_text) => {\n    // subNovelData에 _text에 대응하는 객체 추가\n    this.setState((prevState) => ({\n      subNovelData: prevState.subNovelData.concat({\n        writer: \"ㅇㅇ\",\n        title: \"mysql1\",\n        date: new Date().toISOString(),\n        upvote: 0,\n        downvote: 0,\n        position: 0,\n        end_story: false,\n        content: _text,\n        id: \"sub_\" + prevState.subNovelData.length,\n      }),\n    }));\n  };\n\n  handleAddRecommend = (destId) => {\n    // debugger;\n    this.setState({\n      subNovelData: this.state.subNovelData.map((elem) => {\n        if (elem.id === destId) {\n          elem.recommend = elem.recommend + 1;\n        }\n        return elem;\n      }),\n    });\n  };\n}\n\nexport default Novel;\n"]},"metadata":{},"sourceType":"module"}