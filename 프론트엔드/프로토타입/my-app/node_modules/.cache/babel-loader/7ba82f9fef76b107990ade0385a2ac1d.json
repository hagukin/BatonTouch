{"ast":null,"code":"var _jsxFileName = \"/home/habin/\\uB9B4\\uB808\\uC774\\uC18C\\uC124\\uD504\\uB85C\\uC81D\\uD2B8/BatonTouch/\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC/\\uD504\\uB85C\\uD1A0\\uD0C0\\uC785/my-app/src/components/showNovel/user_cbox.js\";\nimport React, { Component } from 'react';\n/*\n사용자 입력 cbox를 구현하는 컴포넌트 입니다.\nprops\n1. onSubmit 핸들러: 사용자가 입력한 본문과 주석을 상위 컴포넌트에 반환합니다.\n-> 유저가 입력한 본문과 주석을 저장하는 상위 컴포넌트의 배열을 수정합니다.\n2. btnMode: 상위 컴포넌트의 uCboxMode가 write면 '확인'/ devise면 '수정'입니다.\n3. cols: textarea의 cols\n4. rows: textarea의 rows\n5. mainData : 본문\n6. cmtData : 주석\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UCbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MainValue: this.props.mainData,\n      CmtValue: this.props.cmtData,\n      isCmtOn: false\n    };\n    this.btnCmtClick = this.btnCmtClick.bind(this);\n    this.handleChangeMain = this.handleChangeMain.bind(this);\n    this.handleChangeCmt = this.handleChangeCmt.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  btnCmtClick() {\n    this.setState({\n      isCmtOn: !this.state.isCmtOn\n    });\n  }\n\n  handleChangeMain(event) {\n    this.setState({\n      MainValue: event.target.value\n    });\n  }\n\n  handleChangeCmt(event) {\n    this.setState({\n      CmtValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.onSubmit(this.state.MainValue, this.state.CmtValue);\n  }\n\n  render() {\n    var cboxMain = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"cboxMain\",\n      value: this.state.MainValue,\n      onChange: this.handleChangeMain,\n      cols: this.props.cols,\n      rows: this.props.rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this);\n\n    var cboxCmt = /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"cboxCmt\",\n      value: this.state.CmtValue,\n      onChange: this.handleChangeCmt,\n      cols: this.props.cols,\n      rows: this.props.rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this);\n\n    var cboxText = null;\n\n    if (this.state.isCmtOn === false) {\n      cboxText = cboxMain;\n    } else {\n      cboxText = cboxCmt;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cboxText, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: this.props.btnMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.btnCmtClick,\n        children: [\"\\uD604 \\uC0C1\\uD0DC:\", this.state.isCmtOn ? '주석' : '본문']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UCbox;","map":{"version":3,"sources":["/home/habin/릴레이소설프로젝트/BatonTouch/프론트엔드/프로토타입/my-app/src/components/showNovel/user_cbox.js"],"names":["React","Component","UCbox","constructor","props","state","MainValue","mainData","CmtValue","cmtData","isCmtOn","btnCmtClick","bind","handleChangeMain","handleChangeCmt","handleSubmit","setState","event","target","value","onSubmit","render","cboxMain","cols","rows","cboxCmt","cboxText","btnMode"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n/*\n사용자 입력 cbox를 구현하는 컴포넌트 입니다.\nprops\n1. onSubmit 핸들러: 사용자가 입력한 본문과 주석을 상위 컴포넌트에 반환합니다.\n-> 유저가 입력한 본문과 주석을 저장하는 상위 컴포넌트의 배열을 수정합니다.\n2. btnMode: 상위 컴포넌트의 uCboxMode가 write면 '확인'/ devise면 '수정'입니다.\n3. cols: textarea의 cols\n4. rows: textarea의 rows\n5. mainData : 본문\n6. cmtData : 주석\n*/\nclass UCbox extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            MainValue: this.props.mainData,\n            CmtValue: this.props.cmtData,\n            isCmtOn: false\n        }\n        this.btnCmtClick = this.btnCmtClick.bind(this);\n        this.handleChangeMain = this.handleChangeMain.bind(this);\n        this.handleChangeCmt = this.handleChangeCmt.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    btnCmtClick() {\n        this.setState({\n            isCmtOn: !this.state.isCmtOn\n        });\n    }\n\n    handleChangeMain(event){\n        this.setState({MainValue:event.target.value});\n    }\n    handleChangeCmt(event){\n        this.setState({CmtValue:event.target.value});\n    }\n    handleSubmit(event){\n        this.props.onSubmit(this.state.MainValue, this.state.CmtValue);\n    }\n\n    render(){\n        var cboxMain = <textarea name=\"cboxMain\" value={this.state.MainValue} \n        onChange={this.handleChangeMain} cols={this.props.cols} rows={this.props.rows}></textarea>;\n        var cboxCmt = <textarea name=\"cboxCmt\" value={this.state.CmtValue}\n        onChange={this.handleChangeCmt} cols={this.props.cols} rows={this.props.rows}></textarea>;\n\n        var cboxText = null;\n        if (this.state.isCmtOn === false) {\n            cboxText = cboxMain;\n        } else {\n            cboxText = cboxCmt;\n        }\n\n        return(\n            <div>\n                {cboxText}\n                <button onClick={this.handleSubmit}>{this.props.btnMode}</button>\n                <button onClick={this.btnCmtClick}>현 상태:{this.state.isCmtOn ? '주석' : '본문'}</button>\n            </div>\n        );\n    }\n}\n\nexport default UCbox;"]},"metadata":{},"sourceType":"module"}